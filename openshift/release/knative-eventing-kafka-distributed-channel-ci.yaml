---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: eventing-kafka-addressable-resolver
  labels:
    eventing.knative.dev/release: devel
    duck.knative.dev/addressable: "true"
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    duck.knative.dev/channelable: "true"
    kafka.eventing.knative.dev/release: devel
  name: kafka-channelable-manipulator
rules:
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  - kafkachannels/status
  verbs:
  - create
  - get
  - list
  - watch
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
roleRef:
  kind: ClusterRole
  name: eventing-kafka-channel-controller
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eventing-kafka-channel-controller
  labels:
    kafka.eventing.knative.dev/release: devel
rules:
- apiGroups:
  - "" # Core API Group
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - "" # Core API Group.
  resources:
  - events
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - messaging.knative.dev
  resources:
  - channels
  - channels/status
  - subscriptions
  - subscriptions/status
  verbs:
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - messaging.knative.dev
  resources:
  - kafkachannels/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
subjects:
- kind: ServiceAccount
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
roleRef:
  kind: Role
  name: eventing-kafka-channel-controller
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
rules:
- apiGroups:
  - "" # Core API Group
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
  - update
  - patch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
  labels:
    kafka.eventing.knative.dev/release: devel
---
apiVersion: v1
data:
  sarama: |
    Version: 2.0.0 # Kafka Version Compatibility From Sarama's Supported List (Major.Minor.Patch)
    Admin:
      Timeout: 10000000000  # 10 seconds
    Net:
      KeepAlive: 30000000000  # 30 seconds
      MaxOpenRequests: 1 # Set to 1 for use with Idempotent Producer
      TLS:
        Enable: true
      SASL:
        Enable: true
        Mechanism: PLAIN
        Version: 1
    Metadata:
      RefreshFrequency: 300000000000  # 5 minutes
    Consumer:
      Offsets:
        AutoCommit:
          Interval: 5000000000  # 5 seconds
        Retention: 604800000000000  # 1 week
    Producer:
      Idempotent: true  # Must be false for Azure EventHubs
      RequiredAcks: -1  # -1 = WaitForAll, Most stringent option for "at-least-once" delivery.
  eventing-kafka: |
    receiver:
      cpuLimit: 200m
      cpuRequest: 100m
      memoryLimit: 100Mi
      memoryRequest: 50Mi
      replicas: 1
    dispatcher:
      cpuLimit: 500m
      cpuRequest: 300m
      memoryLimit: 128Mi
      memoryRequest: 50Mi
      replicas: 1
    kafka:
      enableSaramaLogging: false
      topic:
        defaultNumPartitions: 4
        defaultReplicationFactor: 1 # Cannot exceed the number of Kafka Brokers!
        defaultRetentionMillis: 604800000  # 1 week
      adminType: kafka # One of "kafka", "azure", "custom"
kind: ConfigMap
metadata:
  name: config-eventing-kafka
  namespace: knative-eventing
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: kafkachannels.messaging.knative.dev
  labels:
    kafka.eventing.knative.dev/release: devel
    knative.dev/crd-install: "true"
    messaging.knative.dev/subscribable: "true"
    duck.knative.dev/addressable: "true"
spec:
  group: messaging.knative.dev
  names:
    kind: KafkaChannel
    plural: kafkachannels
    singular: kafkachannel
    categories:
    - all
    - knative
    - messaging
    - channel
    shortNames:
    - kc
  scope: Namespaced
  subresources:
    status: { }
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].status"
  - name: Reason
    type: string
    JSONPath: ".status.conditions[?(@.type==\"Ready\")].reason"
  - name: URL
    type: string
    JSONPath: .status.address.url
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  validation:
    openAPIV3Schema:
      properties:
        spec:
          properties:
            numPartitions:
              format: int32
              type: integer
              description: "Number of partitions of a Kafka topic."
            replicationFactor:
              format: int16
              type: integer
              description: "Replication factor of a Kafka topic."
            subscribable:
              type: object
              properties:
                subscribers:
                  type: array
                  description: "The list of subscribers that have expressed interest in receiving events from this channel."
                  items:
                    required:
                    - uid
                    properties:
                      ref:
                        type: object
                        required:
                        - namespace
                        - name
                        - uid
                        properties:
                          apiVersion:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                            minLength: 1
                          namespace:
                            type: string
                            minLength: 1
                          uid:
                            type: string
                            minLength: 1
                      uid:
                        type: string
                        minLength: 1
                      subscriberURI:
                        type: string
                        minLength: 1
                      replyURI:
                        type: string
                        minLength: 1
  versions:
  - name: v1alpha1
    served: false # Disabled Until We Include The Conversion Webhook From... eventing-contrib/kafka/channel/cmd/webhook
    storage: false
  - name: v1beta1
    served: true
    storage: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-leader-election-kafkachannel
  namespace: knative-eventing
data:
  resourceLock: "leases"
  leaseDuration: "15s"
  renewDeadline: "10s"
  retryPeriod: "2s"
  _example: |
    resourceLock: "leases"
    leaseDuration: "15s"
    renewDeadline: "10s"
    retryPeriod: "2s"
    enabledComponents: "kafkachannel-controller, kafkasecret-controller"
---
apiVersion: v1
data:
  brokers: ""
  namespace: ""
  password: ""
  username: ""
kind: Secret
metadata:
  name: kafka-cluster
  namespace: knative-eventing
  labels:
    eventing-kafka.knative.dev/kafka-secret: "true"
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
  labels:
    k8s-app: eventing-kafka-channel-controller
    kafka.eventing.knative.dev/release: devel
spec:
  selector:
    app: eventing-kafka-channel-controller
  ports:
  - name: metrics
    protocol: TCP
    port: 8081
    targetPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventing-kafka-channel-controller
  namespace: knative-eventing
  labels:
    app: eventing-kafka-channel-controller
    kafka.eventing.knative.dev/release: devel
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventing-kafka-channel-controller
      name: eventing-kafka-channel-controller
  template:
    metadata:
      labels:
        app: eventing-kafka-channel-controller
        name: eventing-kafka-channel-controller
    spec:
      serviceAccountName: eventing-kafka-channel-controller
      containers:
      - name: eventing-kafka
        image: registry.svc.ci.openshift.org/openshift/knative-v0.19.1:knative-eventing-kafka-distributed-controller
        imagePullPolicy: IfNotPresent # Must be IfNotPresent or Never if used with ko.local
        ports:
        - containerPort: 8081
          name: metrics
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election-kafkachannel
        - name: SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: METRICS_PORT
          value: "8081"
        - name: METRICS_DOMAIN
          value: "eventing-kafka"
        - name: RECEIVER_IMAGE
          value: "registry.svc.ci.openshift.org/openshift/knative-v0.19.1:knative-eventing-kafka-receiver"
        - name: DISPATCHER_IMAGE
          value: "registry.svc.ci.openshift.org/openshift/knative-v0.19.1:knative-eventing-kafka-distributed-dispatcher"
        resources:
          requests:
            cpu: 20m
            memory: 25Mi
          limits:
            cpu: 100m
            memory: 50Mi
